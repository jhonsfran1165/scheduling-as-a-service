version: 2.1

parameters:
  service:
    type: string
    default: "cronjobs"
  docker-repo:
    type: string
    default: "jhonsfran/oceana-databases"
  docker-namespace:
    type: string
    default: "jhonsfran"
  docker-name:
    type: string
    default: "jhonsfran"
  branch-to-push:
    type: string
    default: "feature/argocd-bootstrapping"
  gitops-project:
    type: string
    default: "catalog/oceana/overlays"

commands:
  ci-scripts:
    description: "Exec CI script from remote package"
    parameters:
      script:
        type: string
        default: "lint-dockerfiles"
    steps:
      - run: npx --quiet --package @whaleandjaguar/ci-scripts@1.1.9 << parameters.script >>
  install-node-deps:
    description: "Install alpine deps"
    steps:
      - run: |
          sudo apt-get update
          sudo apt-get install -y bash git jq

# The following stanza defines a map named defaults with a variable that may be
# inserted using the YAML merge (<<: *) key later in the file to save some
# typing. See http://yaml.org/type/merge.html for details.
defaults: &defaults
  environment:
    DOCKER_REPOSITORY: << pipeline.parameters.docker-repo >>
    SERVICE: << pipeline.parameters.service >>
    DOCKER_NAMESPACE: << pipeline.parameters.docker-namespace >>
    DOCKER_NAME: << pipeline.parameters.docker-name >>
  docker:
    - image: circleci/node:14.17.0-stretch

jobs:
  install-dependencies:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - waj-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - waj-v3-node-modules-{{ .Branch }}
      - run:
          name: Install NPM dependencies
          command: npm ci
      - save_cache:
          key: waj-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - save_cache:
          key: waj-v3-node-modules-{{ .Branch }}
          paths:
            - node_modules

  test-commitlint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - waj-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - waj-v3-node-modules-{{ .Branch }}
      - run:
          name: Define environment variable with lastest commit's message
          command: |
            echo 'export COMMIT_MESSAGE=$(git log -1 --pretty=format:"%s")' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Lint commit message
          command: echo "$COMMIT_MESSAGE" | npx commitlint

  test-eslint:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - waj-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - waj-v3-node-modules-{{ .Branch }}
      - run:
          name: Lint JavaScript
          command: npm run lint

  release:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          keys:
            - waj-v3-node-modules-{{ checksum "package.json" }}-{{ checksum "package-lock.json" }}
            - waj-v3-node-modules-{{ .Branch }}
      - run:
          name: Publish new release
          command: |
            sudo apt-get update
            sudo apt-get install -y jq
            export BITBUCKET_TOKEN=$(curl -s -X POST -u "${CLIENT_ID}:${CLIENT_SECRET}" \
                https://bitbucket.org/site/oauth2/access_token \
                -d grant_type=client_credentials -d scopes="repository"| jq --raw-output '.access_token')
            npx --quiet semantic-release

  dockerfile-lint:
    <<: *defaults
    steps:
      - checkout
      - install-node-deps
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.7
      - ci-scripts:
          script: "lint-dockerfiles"

  docker-build-push:
    <<: *defaults
    resource_class: xlarge
    steps:
      - checkout
      - install-node-deps
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.7
      - ci-scripts:
          script: "docker-build-tag-push . ${DOCKER_REPOSITORY}"

  gitops-backups:
    <<: *defaults
    parameters:
      environment:
        type: string
      service:
        type: string
    environment:
      PROJECT: << pipeline.parameters.gitops-project >>
      ENVIRONMENT: << parameters.environment >>
      SERVICE: << parameters.service >>
      BRANCH_TO_PUSH: << pipeline.parameters.branch-to-push >>
      DOCKER_REPOSITORY: << pipeline.parameters.docker-repo >>
    steps:
      - checkout
      - install-node-deps
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.7
      - ci-scripts:
          script: "gitops-gitlab"

  gitops-restores:
    <<: *defaults
    parameters:
      environment:
        type: string
      service:
        type: string
    environment:
      PROJECT: << pipeline.parameters.gitops-project >>
      ENVIRONMENT: << parameters.environment >>
      SERVICE: << parameters.service >>
      BRANCH_TO_PUSH: << pipeline.parameters.branch-to-push >>
      DOCKER_REPOSITORY: << pipeline.parameters.docker-repo >>
    steps:
      - checkout
      - install-node-deps
      - setup_remote_docker:
          docker_layer_caching: true
          version: 20.10.7
      - ci-scripts:
          script: "gitops-gitlab"

workflows:
  version: 2
  main:
    jobs:
      - install-dependencies
      - test-commitlint:
          requires:
            - install-dependencies
      - test-eslint:
          requires:
            - install-dependencies
      - dockerfile-lint:
          requires:
            - install-dependencies
      - release:
          context: whaleandjaguar-publish-semantic-release
          requires:
            - test-commitlint
            - test-eslint
            - dockerfile-lint
          filters:
            branches:
              only: master
      - docker-build-push:
          context: whaleandjaguar-docker
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - gitops-backups:
          environment: development
          service: backups
          context: whaleandjaguar-gitops
          requires:
            - docker-build-push
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - gitops-restores:
          environment: development
          service: restores
          context: whaleandjaguar-gitops
          requires:
            - gitops-backups
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
